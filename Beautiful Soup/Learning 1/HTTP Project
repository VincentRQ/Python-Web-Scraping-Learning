
def get_jobs_for(lat=None, lng=None, results=20):
    import requests
    if lat is None or lng is None:
        raise ValueError("Both lat and lng must be provided, be sure ot use a negative number with lng")




    url = f"https://api.higherme.com/classic/jobs?page=1&includes=location,location.company,location.externalServiceReferences&limit={results}&filters\\[brand.id\\]=58bd9e7f472bd&filters\\[lat\\]={lat}&filters\\[lng\\]={lng}&filters\\[distance\\]=10&sort\\[distance\\]=asc"


    headers = {
      'authority': 'api.higherme.com',
      'accept': 'application/json, text/plain, */*',
      'accept-language': 'en-US,en;q=0.9',
      'higherme-client-version': '2024.01.25_3.0',
      'origin': 'https://app.higherme.com',
      'sec-ch-ua': '"Not A(Brand";v="99", "Brave";v="121", "Chromium";v="121"',
      'sec-ch-ua-mobile': '?0',
      'sec-ch-ua-platform': '"Windows"',
      'sec-fetch-dest': 'empty',
      'sec-fetch-mode': 'cors',
      'sec-fetch-site': 'same-site',
      'sec-gpc': '1',
      'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/121.0.0.0 Safari/537.36'
    }

    response = requests.get(url, headers=headers)

    return response.json()


response_data = get_jobs_for(42.6532, -79.3832, 20)
response_data.get('data')
import pandas as pd
df = pd.DataFrame(
    data=[r.get('attributes') for r in response_data.get('data')],
    columns=['title', 'full_time', 'part_time', 'requirements', 'distance']
)

df.to_csv("open_positions.csv", index=False)
